<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Lista de Livros</title>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        body {
            background: linear-gradient(to bottom right, #f0f8ff, #e6e6fa);
            font-family: 'Roboto', sans-serif;
            margin: 0;
            padding: 0;
        }

        .home-icon {
            position: absolute;
            top: 20px;
            left: 20px;
            font-size: 24px;
            color: #007bff;
            text-decoration: none;
        }

        .titulo-livros {
            text-align: center;
            font-size: 2rem;
            font-weight: bold;
            margin: 40px 0 30px;
            color: #333;
        }

        .alert {
            margin: 20px auto;
            max-width: 600px;
            text-align: center;
        }

        .row {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            gap: 20px;
            margin: 0 auto;
            padding: 0;
            max-width: 100%;
        }

        .col-md-2 {
            flex: 0 0 48%; /* Dois livros por linha */
            margin-bottom: 20px;
        }

        .card {
            display: flex;
            flex-direction: row; /* Alinha a imagem e o conteúdo na horizontal */
            height: 200px;
            border: 1px solid #ddd;
            border-radius: 8px;
            box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            transition: transform 0.3s;
            margin-bottom: 20px;
            position: relative;
        }

            .card:hover {
                transform: scale(1.05);
            }

            .card img {
                width: 60%; 
                height: auto;
                object-fit: cover;
            }

        .card-body {
            padding: 15px;
            text-align: left;
            width: 70%; /* O conteúdo ocupa os 60% restantes */
            display: flex;
            flex-direction: column;
        }

        .card-title {
            font-size: 1.2rem;
            font-weight: bold;
            margin: 10px 0;
            color: #444;
        }

            .card-title a {
                color: inherit;
                text-decoration: none;
            }

        .card-value {
            font-size: 1rem;
            color: #444;
            font-weight: bold;
        }

        .card-price {
            font-size: 1rem;
            color: #28a745;
            font-weight: bold;
            margin-top: 5px;
        }

        .btn-primary {
            padding: 10px 20px;
            background-color: #007bff;
            color: #fff;
            border-radius: 5px;
            text-decoration: none;
            transition: background-color 0.3s;
        }

            .btn-primary:hover {
                background-color: #007bff;
            }

        .book-checkbox {
            position: absolute;
            top: 10px;
            left: 10px;
            display: none;
            width: 20px;
            height: 20px;
        }

        .card.selected .book-checkbox {
            display: block;
        }

        .btn-select-all {
            padding: 10px 20px;
            background-color: #007bff;
            color: white;
            border-radius: 5px;
            cursor: pointer;
            border: none;
            transition: background-color 0.3s;
        }

            .btn-select-all:hover {
                background-color: #007bff;
            }

        #btn-excluir {
            display: none;
            margin-top: 10px;
            background-color: #dc3545;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
        }

            #btn-excluir:hover {
                background-color: #b21f2d;
            }

        .button-container {
            position: absolute;
            top: 10px;
            right: 10px;
            display: flex;
            gap: 10px;
        }

        .btn-delete-one {
            background-color: #007bff;
            color: white;
            padding: 10px 20px;
            border-radius: 5px;
            border: none;
            cursor: pointer;
        }

            .btn-delete-one:hover {
                background-color: #007bff;
            }

        .btn-add-livro {
            background-color: #007bff;
            color: white;
            padding: 10px 20px;
            border-radius: 5px;
            border: none;
            cursor: pointer;
        }

            .btn-add-livro:hover {
                background-color: #0056b3;
            }
    </style>
</head>
<body>
    <a href="@Url.Action("RetornaTodosLivros", "Home")" class="home-icon"><i class="fas fa-home"></i></a>
    <h2 class="titulo-livros">Livraria Souza</h2>

    @if (TempData["MensagemLivroAdicionado"] != null)
    {
        <div class="alert alert-@TempData["TipoMensagem"] alert-dismissible fade show" role="alert">
            @TempData["MensagemLivroAdicionado"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["MensagemLivroDeletado"] != null)
    {
        <div class="alert alert-@TempData["TipoMensagem"] alert-dismissible fade show" role="alert">
            @TempData["MensagemLivroDeletado"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <form id="form-excluir-livros" asp-action="DeletaLivrosEmBloco" method="post">
        @Html.AntiForgeryToken()
        <div id="livroIdsContainer"></div>
        <button id="btn-excluir" type="submit" style="display: none;">Excluir Selecionados</button>
    </form>

    <div class="button-container">
        <button id="delete-one" class="btn-delete-one">Deletar livros</button>
        <a href="@Url.Action("CriarLivro", "Home")" class="btn btn-primary">Adicionar Livro</a>
        <a href="@Url.Action("HomePageCliente", "HomeCliente")" class="btn btn-primary">Página Cliente</a>
        <a href="@Url.Action("MostrarRegistroSimples", "Vendas")" class="btn btn-primary">Histórico de Compras</a>
    </div>

    <div class="row">
        @foreach (var livro in Model)
        {
            <div class="col-md-2">
                <div class="card mb-4">
                    <input type="checkbox" class="book-checkbox" value="@livro.LivroId" style="display: none;" />
                    <a href="@Url.Action("MostraDetalhesLivro", "DetalhesLivro", new { id = livro.LivroId })">
                        <img src="@livro.CapaLivro" class="card-img-top" alt="@livro.Titulo" />
                    </a>
                    <div class="card-body">
                        <h5 class="card-title">
                            <a href="@Url.Action("MostraDetalhesLivro", "DetalhesLivro", new { id = livro.LivroId })">@livro.Titulo</a>
                        </h5>
                        <p class="card-value">
                            Estoque: @(livro.QntdEstoque == 0 ? "Esgotado" : livro.QntdEstoque.ToString())
                        </p>
                        <p class="card-price">R$ @livro.ValorVenda</p>
                    </div>
                </div>
            </div>
        }
    </div>

    <script>
        const checkboxes = document.querySelectorAll('.book-checkbox');
        const deleteOneButton = document.getElementById('delete-one');
        const deleteButton = document.getElementById('btn-excluir');
        const livroIdsContainer = document.getElementById('livroIdsContainer');
        let checkboxesVisible = false;

        deleteOneButton.addEventListener('click', function () {
            checkboxesVisible = !checkboxesVisible;
            checkboxes.forEach(checkbox => {
                checkbox.style.display = checkboxesVisible ? 'block' : 'none';
            });
        });

        checkboxes.forEach(checkbox => {
            checkbox.addEventListener('change', function () {
                updateSelectedLivros();
            });
        });

        function updateSelectedLivros() {
            livroIdsContainer.innerHTML = '';
            let selectedLivros = [];
            checkboxes.forEach(checkbox => {
                if (checkbox.checked) {
                    selectedLivros.push(checkbox.value);
                }
            });

            if (selectedLivros.length > 0) {
                deleteButton.style.display = 'inline-block';
                selectedLivros.forEach(livroId => {
                    const input = document.createElement('input');
                    input.type = 'hidden';
                    input.name = 'livroIds';
                    input.value = livroId;
                    livroIdsContainer.appendChild(input);
                });
            } else {
                deleteButton.style.display = 'none';
            }
        }
    </script>
</body>
</html>
